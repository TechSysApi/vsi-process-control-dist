{
  "type": "object",
  "properties": {
    "timestamp": {
      "type": "string",
      "description": "The date+timestamp which identifies the point in time, where the information was generated, including milliseconds.",
      "format": "date-time"
    },
    "trackEvents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TrackEvent"
      }
    }
  },
  "required": [
    "timestamp",
    "trackEvents"
  ],
  "additionalProperties": false,
  "description": "This element represents an event-driven data generation of a piece of MPE.",
  "$id": "#TrackEvents",
  "$schema": "http://json-schema.org/draft-07/schema",
  "definitions": {
    "TrackEvent": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "[ACTION] Attribute is required in future releases after WESort is rolled out in all sorting centers.\nThe date+timestamp which identifies the point in time, where the information was generated, including milliseconds.",
          "format": "date-time"
        },
        "locationKey": {
          "type": "string",
          "description": "[ACTION] Attribute is required in future releases after WESort is rolled out in all sorting centers.\nUnique identifier of the sorting center (ONRP).",
          "maxLength": 200
        },
        "eventType": {
          "$ref": "#/definitions/TrackEventType",
          "description": "The type of Track Event"
        },
        "processPoint": {
          "type": "string",
          "description": "The location where the information was generated. (Siehe Anlagen Bezeichnungskonzept)"
        },
        "sortingProcess": {
          "$ref": "#/definitions/SortingProcess",
          "description": "[ACTION] Attribute is required in future releases after WESort is rolled out in all sorting centers.\nDefines the sorting process."
        },
        "itemId": {
          "type": "string",
          "description": "[DEPRECATED] Is replaced by the attribute processingItemId. Attribute will be removed in future releases after WESort is rolled out in all sorting centers.\nThe id of the mailpiece assigned by the sorting machine during sorting."
        },
        "processingItemId": {
          "type": "string",
          "description": "[ACTION] Attribute is required in future releases after WESort is rolled out in all sorting centers.\nThe machine specific identifier to track a mail item during a machine sorting cycle. The identifier is used to synchronize the data events between coding and sorting systems.",
          "maxLength": 32
        },
        "mailpieceId": {
          "type": "string",
          "description": "[DEPRECATED] Is replaced by the attribute processingItemId. Attribute will be removed in future releases after WESort is rolled out in all sorting centers.\nThe machine specific identifier to track a mail item during a machine sorting cycle. The identifier is used to synchronize the data events between coding and sorting systems.",
          "maxLength": 200
        },
        "dischargeReason": {
          "$ref": "#/definitions/SortReason",
          "description": "[DEPRECATED] Attribute will be removed in future releases after WESort is rolled out in all sorting centers.\nReason of discharge. Only relevant for discharge events."
        },
        "sourceId": {
          "type": "string",
          "description": "Refers to a module id as event-source, e.g. DWS02",
          "pattern": "[A-Z]{3}[0-9]{2}"
        },
        "blockId": {
          "$ref": "#/definitions/UUID",
          "description": "Identifier to track a group of parcels."
        },
        "mailpieceAttributes": {
          "$ref": "#/definitions/MailpieceAttr",
          "description": "<b>Dependency:</b> The MailpieceAttrT type is imported from cen-mc-rc-stream-api where it is used for the submit-mailpiece topic\nThe MailpieceAttrT type provides basic mailpiece related information:\n- the kind of the mail item\n- the mailclass of the mail item; important for the ED because it and may affect the address recognition\n- the scanned faces of the mail item. The FaceSetT type is assigned to faces and allows providing a sequence of faces.\n   The FaceSetT types allows to link a face with the corresponding image by a page attribute.\n- a preknowledge result if a barcode reader or some other type of Enrichment Device is directly attached to the MC.\n   This result will be in accordance with the result type specified in the IC-ED interface."
        }
      },
      "required": [
        "eventType",
        "processPoint",
        "itemId",
        "sourceId"
      ],
      "additionalProperties": false,
      "description": "The track event of an parcel. The event will be used for statistic purpose.",
      "$id": "#TrackEvent"
    },
    "TrackEventType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "READ",
        "INDUCTION",
        "TRACK",
        "DISCHARGE",
        "READ_BULK"
      ],
      "description": "Defines the track event type.\nList of values:\n- UNKNOWN: Default enum value to map not supported values.\n- READ: Event occured when reading at the tunnel\n- INDUCTION: Event occurred during induction\n- TRACK: Event occurred on the sorter\n- DISCHARGE: Event occurred during discharge\n- READ_BULK: Event occured when reading Bulk",
      "$id": "#TrackEventType"
    },
    "SortingProcess": {
      "type": "string",
      "enum": [
        "AUTOMATIC",
        "MANUAL_CODING_REJECT",
        "MANUAL_CODING_LIGHT",
        "MANUAL_CODING_BULK",
        "MANUAL_CODING_BULK_AUTOMATIC"
      ],
      "description": "Defines the sorting process.\r\nAUTOMATIC Sorted by the sorter\r\nMANUAL_CODING_REJECT Device where a coder manually captures barcodes and enters address information\r\nMANUAL_CODING_LIGHT Device where barcodes barcodes, products and the weight is captured (manual or partially automated)\r\nMANUAL_CODING_BULK Device where barcodes, weight and dimensions and address information for bulky goods are captured or entered (manual or partially automated)\r\nMANUAL_CODING_BULK_AUTOMATIC Device where a coder manually captures barcodes and other specific information for bulky goods",
      "$id": "#SortingProcess"
    },
    "SortReason": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "OK",
        "MAX_RECIRCULATION",
        "ITEM_NO_READ",
        "ITEM_MULTIPLE_READ",
        "SCANNER_TIMEOUT",
        "ITEM_STRAY",
        "ITEM_INDUCTION_ERROR",
        "ITEM_DISCHARGE_ERROR",
        "ITEM_ERROR",
        "ITEM_TRACKING_ERROR",
        "ITEM_OCCUPIED_TWICE_ERROR",
        "ITEM_DISAPPEARED",
        "OUTLET_NOT_AVAILABLE",
        "OUTLET_UNKNOWN",
        "UNDEFINED_ERROR",
        "NO_CAPACITY",
        "DIMENSION_ERROR",
        "WEIGHT_ERROR",
        "SORTPLAN_ERROR",
        "DIRECT_SORTING_MODE",
        "ITEM_NO_SORTCODE",
        "OUTLET_MISSED"
      ],
      "description": "Defines the machine specific sort reasons.\nList of values:\n- UNKNOWN: Default enum value to map not supported values.\n- OK: Discharge OK. This describes just a \"regular\" item\n- MAX_RECIRCULATION: Item has reached the max allowed amount of recirculations.\n- ITEM_NO_READ: [DEPCRECATED] Item has reached the max allowed amount of scans and the last attempt was a no read.\n- ITEM_MULTIPLE_READ: [DEPCRECATED] Multiple national or international id barcodes could be identified.\n- SCANNER_TIMEOUT: Item has reached the max allowed amount of scans and the last attempt was a \"no answer\" from scanner.\n- ITEM_STRAY: Stray item detected.\n- ITEM_INDUCTION_ERROR: Induction error item detected (occupied twice, wrong tray).\n- ITEM_DISCHARGE_ERROR: Discharge faults.\n- ITEM_ERROR: Item has a Logical error.\n- ITEM_TRACKING_ERROR: item was inducted with tracking fault.\n- ITEM_OCCUPIED_TWICE_ERROR: item was inducted on occupied tray.\n- ITEM_DISAPPEARED: The parcel was lost at unknown location.\n- OUTLET_NOT_AVAILABLE: No available chute could be found.\n- OUTLET_UNKNOWN: Logical destination not defined.\n- UNDEFINED_ERROR: Internal error happened.\n- NO_CAPACITY: The destination outlet has no more capacity.\n- DIMENSION_ERROR: Item oversize. The parcel was discharge, because of dimension exceed.\n- WEIGHT_ERROR: Item too heavy. The parcel was discharge, because of weight exceed.\n- SORTPLAN_ERROR: Sortplan error.\n- DIRECT_SORTING_MODE: Item sorted by the direct sorting mode.\n- ITEM_NO_SORTCODE: No sortcode has been received for this item.\n- OUTLET_MISSED: Sortcode has been updated (push or repetitive requests), physical outlet already passed.",
      "$id": "#SortReason"
    },
    "UUID": {
      "type": "string",
      "description": "<a href=\"https://swagger.io/docs/specification/data-models/data-types/#string\">String @format uuid</a>\n(even '@format uuid' is not specified).",
      "format": "uuid"
    },
    "MailpieceAttr": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MailpieceType",
          "description": "Defines the type of the mail item."
        },
        "preknowledge": {
          "$ref": "#/definitions/RecognitionResult",
          "description": "Provides preknowledge to the RC System, e.g. a barcode\r\nresult if a barcode reader is integrated into the machine."
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false,
      "description": "This type is taken from CEN/TS 15448 and extended by a “preknowledge” element.\r\nThe type MailpieceAttrT specifies basic mailpiece attributes.",
      "$id": "#MailpieceAttr"
    },
    "MailpieceType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "LETTER",
        "LETTER_BUNDLE",
        "FLAT",
        "FLAT_BUNDLE",
        "PARCEL"
      ],
      "description": "Defines the mailpiece type.\r\nUNKNOWN Unknown mailpiece type for the sorter\r\nLETTER Mail item (Brief)\r\nLETTER_BUNDLE Not supported\r\nFLAT Big letters mostly from China (Kleinware)\r\nFLAT_BUNDLE Bundle of mail items (Bund)\r\nPARCEL Parcel item (Paket)",
      "$id": "#MailpieceType"
    },
    "RecognitionResult": {
      "type": "object",
      "properties": {
        "multipleMailpiecdIdRecognized": {
          "type": "boolean",
          "description": "[DEPRECATED] Attribute will be removed in future releases after WESort is rolled out in all sorting centers.\r\nIf true, multiple identcodes were recognized by the camera."
        },
        "informationCarriers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InformationCarrier"
          },
          "description": "Contains the data from the information carrier identified by the reading system.\r\nThe reading system should read and send all available barcodes/matrix codes. The consuming systems will apply further classification and filtering."
        },
        "barCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BarCode"
          },
          "description": "[DEPRECATED] Is replaced by the attribute informationCarriers. Attribute will be removed in future releases after WESort is rolled out in all sorting centers.\r\nContains all barcodes/matrix codes identified by the reading system.\r\nThe reading system should read and send all available barcodes/matrix codes. The consuming systems will apply further classification and filtering."
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "dimension": {
          "$ref": "#/definitions/Dimension",
          "description": "dimension of the mail piece."
        },
        "weight": {
          "$ref": "#/definitions/Weight",
          "description": "weight of the mail piece."
        },
        "legalForTrade": {
          "$ref": "#/definitions/LegalForTrade",
          "description": "Legal For Trade information."
        },
        "binOccupancy": {
          "$ref": "#/definitions/BinOccupancyState"
        }
      },
      "additionalProperties": false,
      "$id": "#RecognitionResult"
    },
    "InformationCarrier": {
      "type": "object",
      "properties": {
        "symbology": {
          "$ref": "#/definitions/Symbology",
          "description": "Symbology of an information carrier"
        },
        "value": {
          "type": "string",
          "description": "Value of an information carrier"
        }
      },
      "required": [
        "symbology",
        "value"
      ],
      "additionalProperties": false,
      "description": "Identified and captured information carrier (e.g. barcodes, logos)",
      "$id": "#InformationCarrier"
    },
    "Symbology": {
      "type": "string",
      "enum": [
        "NOT_RECOGNIZED",
        "ADDON",
        "CODABAR",
        "CODE_39",
        "CODE_93",
        "CODE_128",
        "DATA_MATRIX",
        "EAN_8",
        "EAN_13",
        "EAN_128",
        "I2OF5",
        "MAXI_CODE",
        "PDF_417",
        "QR",
        "UPC_A",
        "UPC_E",
        "TEXT"
      ],
      "description": "NOT_RECOGNIZED The symbology is not recognized\nADDON Barcode Zusatz zu EAN und UPC\nCODABAR Barcode Codabar\nCODE_39 Barcode 39\nCODE_93 Barcode 93\nCODE_128 Barcode 128\nDATA_MATRIX Data Matrix Code\nEAN_8 International Article Number\nEAN_13 International Article Number\nEAN_128 International Article Number\nI2OF5 Interleved 2 of 5 Code\nMAXI_CODE Barcode Maxicode\nPDF_417 Barcode PDF417\nQR QR Barcode\nUPC_A Barcode Universal Product Codes (Normalversion)\nUPC_E Barcode Universal Product Codes (Kurzvariante)\nTEXT Text block (for example Postcode or AreaNumber for FLAT_BUNDLE)",
      "$id": "#Symbology"
    },
    "BarCode": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BarCodeSymbology",
          "description": "Provides the valid symbologies of a barcode label."
        },
        "value": {
          "type": "string",
          "description": "This element contains the value of the barcode."
        },
        "status": {
          "$ref": "#/definitions/BarCodeStatus",
          "description": "This element contains the status of the barcode."
        }
      },
      "required": [
        "status"
      ],
      "additionalProperties": false,
      "description": "This type contains a barcode.",
      "$id": "#BarCode"
    },
    "BarCodeSymbology": {
      "type": "string",
      "enum": [
        "CODE_128",
        "DATA_MATRIX"
      ],
      "description": "Provides the valid symbologies of a barcode label",
      "$id": "#BarCodeSymbology"
    },
    "BarCodeStatus": {
      "type": "string",
      "enum": [
        "NO_BARCODE",
        "DETECTED_AND_RECOGNIZED",
        "DETECTED_AND_NOT_RECOGNIZED"
      ],
      "description": "# Description\r\n\r\nThis type defines the states a barcode can have.\r\n\r\n**NO_BARCODE**: The barcode symbol or the code value could not be detected.\r\n\r\n**DETECTED_AND_RECOGNIZED**: The barcode/matrix code matches at least one of the below patterns / validation rules\r\n\r\n**DETECTED_AND_NOT_RECOGNIZED**: The barcode/matrix code matches none of the below patterns / validation rules\r\n\r\n---\r\n\r\nOnly recognized barcodes/matrix codes such as productCodes should be used by consuming systems.\r\n\r\nNot recognized barcodes can be useful:\r\n- in case of new barcode formats\r\n- for systems outside of PL sorting systems\r\n- for (error) analysis\r\n\r\n# Patterns/ Validation Rules:\r\n\r\n## CODE_128\r\n\r\n   1. **Internationaler Barcode**\r\n\r\n       Beispiel: EP923689367CH  \r\n       Validierung: `[A-Z]{2}[0-9]{9}[A-Z]{2}` (13 Zeichen)\r\n\r\n   2. **Nationaler Barcode**\r\n\r\n       Beispiel: 994214393000008666  \r\n       Validierung: `(98|99)[0-9]{16}` (18 Zeichen)\r\n\r\n   3. **Produktcode: PRZL (Produkt/Zusatzleistungen)**\r\n\r\n       Beispiel: 0509  \r\n       Validierung: `[0-9]{4}` (4 Zeichen)\r\n\r\n   3. **BoxId**\r\n\r\n       Erste zwei Ziffern: Typ der Box: «45» für ThermoCare-Box, Letzte sechs Ziffern: Seriennummer der Box\r\n       Beispiel: 45093456\r\n       Validierung: `[0-9]{8}` (8 Zeichen)\r\n\r\n   4. **Förderhilfentyp**\r\n\r\n       Format: Erste zwei Ziffern: Typ der Förderhilfe, Letzte vier Ziffern: Gewicht der Förderhilfe in Gramm\r\n       Beispiel: 020450\r\n       Validierung: `[0-9]{6}` (6 Zeichen)\r\n\r\n## DATA_MATRIX \r\nDatenfeld: Data Matrix \r\n- Validierung: ECC200\r\nBeispiel: 756109025843770000010000000000000000000003489510005501606300\r\nValidierung: ECC200 (Max. 90 Zeichen)",
      "$id": "#BarCodeStatus"
    },
    "Location": {
      "type": "object",
      "properties": {
        "face": {
          "$ref": "#/definitions/MailpieceFace",
          "description": "# GER-TODO\r\nZur Erkennung auf welcher Seite (welche Kamera) der Identcode gelesen wurde (z.B. für VCS…).\r\nDer Wert ist nur auf den Identcode (national) bezogen."
        },
        "polygon": {
          "$ref": "#/definitions/Polygon",
          "description": "Achtung: Die Punkte in Förderrichtung durchnummeriert, im Unterschied zum CEN-Standard, wo sie im (Gegen-)Uhrzeigersinn ausgerichtet sind.\r\nDie Punkte werden wie folgt ermittelt/ausgegeben:\r\nerster Punkt in Förde-richtung ist der Start-punkt gezählt wird fortlaufend in Förderichtung (nicht Uhrzeigersinn)\r\nalle Angaben sind bezogen auf den Triggernullpunkt (= Schalenanfang) ‚x’ wird in Förderrichtung ermittelt; ‚y’ quer zur Förderrichtung"
        }
      },
      "additionalProperties": false,
      "description": "To specify a region location, the region descriptor LocationT listed subsequently is used. LocationT encloses\r\nno information about the image orientation. The image orientation is specified in the TIFF header. Region\r\ncoordinates are given in pixel and are related to the image origin which corresponds to the upper left corner.\r\nThe coordinates are independent of the TIFF orientation.",
      "$id": "#Location"
    },
    "MailpieceFace": {
      "type": "string",
      "enum": [
        "TOP",
        "LEFT",
        "RIGHT",
        "FRONT",
        "REAR",
        "BOTTOM",
        "FRONT_LEFT",
        "FRONT_RIGHT",
        "REAR_LEFT",
        "REAR_RIGHT"
      ],
      "$id": "#MailpieceFace"
    },
    "Polygon": {
      "type": "object",
      "properties": {
        "dot": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolygonDot"
          }
        }
      },
      "required": [
        "dot"
      ],
      "additionalProperties": false,
      "$id": "#Polygon"
    },
    "PolygonDot": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "additionalProperties": false,
      "$id": "#PolygonDot"
    },
    "Dimension": {
      "type": "object",
      "properties": {
        "length": {
          "type": "integer",
          "description": "Length in [mm]."
        },
        "width": {
          "type": "integer",
          "description": "Width in [mm]."
        },
        "height": {
          "type": "integer",
          "description": "Height in [mm]."
        },
        "state": {
          "$ref": "#/definitions/DimensionMeasurementState"
        }
      },
      "additionalProperties": false,
      "description": "Dimension measurement of the mail piece",
      "$id": "#Dimension"
    },
    "DimensionMeasurementState": {
      "type": "object",
      "properties": {
        "measurementResult": {
          "$ref": "#/definitions/DimensionMeasurementResultType"
        },
        "measurementRange": {
          "$ref": "#/definitions/DimensionMeasurementRangeType"
        },
        "itemSizeClassification": {
          "$ref": "#/definitions/ItemSizeClassificationType"
        }
      },
      "required": [
        "measurementResult",
        "measurementRange",
        "itemSizeClassification"
      ],
      "additionalProperties": false,
      "description": "State of the measurement.",
      "$id": "#DimensionMeasurementState"
    },
    "DimensionMeasurementResultType": {
      "type": "string",
      "enum": [
        "OK",
        "NOK",
        "NOT_RECOGNIZED"
      ],
      "description": "Measurement result state.\r\n\r\n- OK: Measurement VMS ok\r\n- NOK: Measurement VMS not ok\r\n- NOT_RECOGNIZED: No object recognized",
      "$id": "#DimensionMeasurementResultType"
    },
    "DimensionMeasurementRangeType": {
      "type": "string",
      "enum": [
        "INSIDE",
        "OUTSIDE"
      ],
      "description": "- INSIDE: Object is within the measurement range\r\n- OUTSIDE: Object is outside of the measurement range",
      "$id": "#DimensionMeasurementRangeType"
    },
    "ItemSizeClassificationType": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "description": "True: object size ok\r\nFalse: Object size not ok (over and/or undersized, see corresponding flags)"
        },
        "oversized": {
          "type": "boolean",
          "description": "object too big to be measured"
        },
        "undersized": {
          "type": "boolean",
          "description": "object too small to be measured"
        }
      },
      "required": [
        "ok",
        "oversized",
        "undersized"
      ],
      "additionalProperties": false,
      "$id": "#ItemSizeClassificationType"
    },
    "Weight": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "description": "Actual weight in [g].",
          "maxLength": 6
        },
        "scaleId": {
          "type": "string",
          "description": "The id of the scale (e.g. HAE-024)"
        },
        "state": {
          "$ref": "#/definitions/WeightMeasurementState",
          "description": "Weighing errors"
        }
      },
      "additionalProperties": false,
      "description": "Weight measurement of the mail piece.",
      "$id": "#Weight"
    },
    "WeightMeasurementState": {
      "type": "object",
      "properties": {
        "isLegalForTrade": {
          "type": "boolean",
          "description": "False: Weight is not legal for trade."
        },
        "packageDistanceError": {
          "type": "boolean"
        },
        "packageLengthError": {
          "type": "boolean"
        },
        "externalError": {
          "type": "boolean"
        },
        "invalidMeasurement": {
          "type": "boolean"
        },
        "overweight": {
          "type": "boolean",
          "description": "Weight higher than max. weight."
        },
        "underweight": {
          "type": "boolean",
          "description": "Weight lower than min weight."
        },
        "overload": {
          "type": "boolean"
        },
        "underload": {
          "type": "boolean"
        },
        "conveyorSpeedChangedDuringMeasurement": {
          "type": "boolean"
        },
        "conveyorSpeedOutOfMaxLimit": {
          "type": "boolean"
        },
        "alibiStorageAtScaleFailed": {
          "type": "boolean"
        },
        "scaleDataFormatError": {
          "type": "boolean"
        }
      },
      "required": [
        "isLegalForTrade"
      ],
      "additionalProperties": false,
      "$id": "#WeightMeasurementState"
    },
    "LegalForTrade": {
      "type": "object",
      "properties": {
        "actualVolume": {
          "type": "integer",
          "description": "# GER-TODO\r\n\r\nRealvolumen VMS#1 wenn VMS#1 = VMS420/520 Realvolumen = 000000 bei VMS#1 = VMS410/510\r\n[dm3]",
          "maxLength": 5
        },
        "boxVolume": {
          "type": "integer",
          "description": "Boxvolumen = Länge x Breite x Höhe\r\n[dm3]",
          "maxLength": 5
        },
        "volumeRatio": {
          "type": "integer",
          "description": "Realvolumen / Boxvolumen in % ganzzahlig"
        },
        "shape": {
          "$ref": "#/definitions/ShapeType",
          "description": "Die Paketform."
        },
        "state": {
          "$ref": "#/definitions/LegalForTradeState"
        }
      },
      "additionalProperties": false,
      "description": "Customs information",
      "$id": "#LegalForTrade"
    },
    "ShapeType": {
      "type": "string",
      "enum": [
        "CUBIC",
        "IRREGULAR"
      ],
      "$id": "#ShapeType"
    },
    "LegalForTradeState": {
      "type": "object",
      "properties": {
        "conveyorSpeedError": {
          "type": "boolean",
          "description": "Conveyor speed is out of tolerance."
        },
        "storageError": {
          "type": "boolean",
          "description": "Alibi storage error."
        },
        "dimensionError": {
          "type": "boolean",
          "description": "VMS data is not legal for trade."
        },
        "weightError": {
          "type": "boolean",
          "description": "Weight data not legal for trade."
        }
      },
      "required": [
        "conveyorSpeedError",
        "storageError",
        "dimensionError",
        "weightError"
      ],
      "additionalProperties": false,
      "description": "Detailed information on legal for trade relevant measurements.\r\n\r\n- If all flags are false, the measurements are legal for trade.\r\n- If only weightError is true, dimension measurement is legal for trade.\r\n- If only dimensionError is true, weight measurement is legal for trade.\r\n- Otherwise, measurements are not legal for trade.",
      "$id": "#LegalForTradeState"
    },
    "BinOccupancyState": {
      "type": "object",
      "properties": {
        "emptyBinOccupied": {
          "type": "boolean"
        },
        "binMultipleItemOccupied": {
          "type": "boolean"
        },
        "frontOverlappingLimitExceeded": {
          "type": "boolean"
        },
        "backOverlappingLimitExceeded": {
          "type": "boolean"
        },
        "multipleItemsDetected": {
          "type": "boolean"
        },
        "conveyingAidDetected": {
          "type": "boolean"
        }
      },
      "required": [
        "emptyBinOccupied",
        "binMultipleItemOccupied",
        "frontOverlappingLimitExceeded",
        "backOverlappingLimitExceeded",
        "multipleItemsDetected",
        "conveyingAidDetected"
      ],
      "additionalProperties": false,
      "description": "Doppelbelegung / Leerschalen-kontrolle\r\nemptyBinOccupied: Belegte Leerschale\r\nbinMultipleItemOccupied: Doppelbelegung - Erkennung der Schalenbelegung von DWS\r\nfrontOverlappingLimitExceeded: Überstand vorne zu groß\r\nbackOverlappingLimitExceeded: Überstand hinten zu groß\r\nmultipleItemsDetected: >= 2 Objekt erkannt\r\nconveyingAidDetected: Förderhilfe erkannt",
      "$id": "#BinOccupancyState"
    }
  }
}